import { Skin } from "./theme.slint";
import { RoundGaugeWidget } from "roundgauge_widget.slint";


export global IndoorAdapter {
    in property <int> current_temp: 5;
    in property <int> current_rh: 90;
    in property <int> current_co2: 3000;
}

export component IndoorDataWidget inherits HorizontalLayout {
    in property current-temp <=> IndoorAdapter.current_temp;
    in property current-rh <=> IndoorAdapter.current_rh;
    in property current-co2 <=> IndoorAdapter.current_co2;

    spacing: 10px;

    for item in [
        { string: "Temperature",
          value: current-temp,
          unit: "°C",
          value_max: 50,
          icon: @image-url("images/indoor-temperature.svg"),
          zones: [
            { from: 0, to: 18, color: Skin.GaugeColor.blue },
            { from: 18, to: 23, color: Skin.GaugeColor.green },
            { from: 23, to: 30, color: Skin.GaugeColor.orange },
            { from: 30, to: 50, color: Skin.GaugeColor.red },
          ],
        },
        { string: " Rel. Humidity",
          value: current-rh,
          unit: "%",
          value_max: 100,
          icon: @image-url("images/humidity.svg"),
          zones: [
            { from: 0, to: 40, color: Skin.GaugeColor.red },
            { from: 40, to: 60, color: Skin.GaugeColor.green },
            { from: 60, to: 100, color: Skin.GaugeColor.orange },
          ],
        },
        { string: "CO2",
          value: current-co2,
          unit: "ppm",
          value_max: 2000,
          icon: @image-url(""),
          zones: [
            { from: 400, to: 650, color: Skin.GaugeColor.green },
            { from: 650, to: 1000, color: Skin.GaugeColor.orange },
            { from: 1000, to: 2000, color: Skin.GaugeColor.red },
          ],
        },
    ] : Rectangle {
        horizontal-stretch: 1;
        // min-width: 150px;
        // max-width: 600px/3;
        preferred-width: 600px/3;
        border-radius: 12px;
        background: Skin.palette.widgetBgnd;

        VerticalLayout {
            padding-top: 10px;
            horizontal-stretch: 1;
            // min-width: 150px;

            Text {
                font-size: Skin.LargeFont;
                text: item.string;
                vertical-alignment: center;
                horizontal-alignment: center;
            }

            pc := RoundGaugeWidget {
                vertical-stretch: 1;
                color_zones: item.zones;
                progress: item.value;
                value_max: item.value_max;

                VerticalLayout {
                    spacing: 0px;
                    Rectangle {
                        vertical-stretch: 10;
                    }
                    Rectangle {
                        img := Image {
                            source: item.icon;
                            height: root.width/3/5; // TODO: make it more reliable
                            colorize: Skin.palette.icon;
                        }
                        min-height: img.height;
                    }
                    value_text := Text {
                        vertical-alignment: center;
                        horizontal-alignment: center;
                        text: (item.unit != "°C" ? ""
                            : item.value > 0 ? "+" : "-") + item.value;
                        font-size: Skin.LargeFont;
                        vertical-stretch: 1;
                    }
                }
                Text {
                    y: value_text.y + value_text.height*5/6;
                    text: item.unit;
                    font-size: Skin.MediumFont;
                    horizontal-alignment: center;
                    color: Skin.palette.secondaryText;
                }

                HorizontalLayout {
                    y: root.y + 18px;
                    max-height: 35px;
                    Text {
                        text: 0;
                        font-size: Skin.MediumFont;
                        horizontal-alignment: left;
                        vertical-alignment: center;
                        color: Skin.palette.secondaryText;
                    }
                    Text {
                        text: item.value-max;
                        font-size: Skin.MediumFont;
                        horizontal-alignment: right;
                        vertical-alignment: center;
                        color: Skin.palette.secondaryText;
                    }
                }
            }

            // TODO: daily chart widget
            Rectangle {
                vertical-stretch: 1;
                min-height: pc.min-height;
                // max-height: 150px;
                // border-width: 1px;
                // border-color: #000000;
                // height: 40%;
            }
        }
    }
}
