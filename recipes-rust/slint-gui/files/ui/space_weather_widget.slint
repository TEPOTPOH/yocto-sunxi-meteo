import { Skin } from "theme.slint";
import { KpIndexBarChart } from "barchart_widget.slint";
import { SpaceLogic, StormType } from "space_logic.slint";


component TextIcon inherits Rectangle {
    in property <string> text: "NA";
    in property <brush> icon_color: Skin.palette.boxBgnd;

    background: icon_color;
    border-radius: 6px;
    border-color: Skin.palette.secondaryText;
    border-width: 2px;
    t := Text {
        text: text;
        horizontal-alignment: center;
        vertical-alignment: center;
        font-size: Skin.LargeFont;
    }
    height: t.height * 2;
    width: self.height;
}

component StormIcon inherits TextIcon {
    in property <float> value: 0;
    in property <StormType> type: StormType.GeoStorm;

    text: type == StormType.GeoStorm ? SpaceLogic.geo-storm-to-string(SpaceLogic.kp-to-geo-storm(value))
        : type == StormType.SolarRadiationStorm ? SpaceLogic.solar-storm-to-string(SpaceLogic.solar-radiation-to-storm-level(value))
        : "NA";
    icon-color: type == StormType.GeoStorm ? SpaceLogic.geo_storm_to_color(SpaceLogic.kp-to-geo-storm(value))
        : type == StormType.SolarRadiationStorm ? SpaceLogic.solar-storm-to-color(SpaceLogic.solar-radiation-to-storm-level(value))
        : Skin.palette.boxBgnd;
}


export global SpaceWeatherAdapter {
    in property <[float]> kp_index_data: [2, 1, 0, 3, 4, 8, 6, 3.3425];
    in property <int> current_hour: 20;

    in property <float> kp_forecast_3h : 8;
    in property <float> kp_forecast_24h : 6;

    in property <float> solar_radiation_now : 1535;
    in property <float> solar_radiation_forecast_3h : 25000;
    in property <float> solar_radiation_forecast_24h : 155;

}

export component SpaceWeatherDataWidget inherits HorizontalLayout {
    in property kp_index_data <=> SpaceWeatherAdapter.kp_index_data;
    in property current_hour <=> SpaceWeatherAdapter.current_hour;

    in property kp_forecast_3h <=> SpaceWeatherAdapter.kp_forecast_3h;
    in property kp_forecast_24h <=> SpaceWeatherAdapter.kp_forecast_24h;

    in property solar_radiation_now <=> SpaceWeatherAdapter.solar_radiation_now;
    in property solar_radiation_forecast_3h <=> SpaceWeatherAdapter.solar_radiation_forecast_3h;
    in property solar_radiation_forecast_24h <=> SpaceWeatherAdapter.solar_radiation_forecast_24h;

    private property <float> current_kp: kp_index_data[kp_index_data.length - 1];

    spacing: 10px;
    Rectangle {
        border-radius: 12px;
        background: Skin.palette.widgetBgnd;
        KpIndexBarChart {
            chart_data: kp_index_data;
            min: 0;
            max: 10;
            current_hour: current_hour;
            width: 94%;
        }
    }
    Rectangle {
        border-radius: 12px;
        background: Skin.palette.widgetBgnd;

        GridLayout {
            spacing: 4px;
            padding-top: 6px;
            padding-bottom: 10px;
            padding-left: 6px;
            padding-right: 6px;

            Text {
                row: 0; colspan: 2;
                text: "  Storms\nNow";
                horizontal-alignment: center;
                font-weight: 500;
                font-size: Skin.MediumFont;
            }
            StormIcon {
                row: 1; col: 0;
                value: current_kp;
                type: StormType.GeoStorm;
            }
            StormIcon {
                row: 1; col: 1;
                value: solar_radiation_now;
                type: StormType.SolarRadiationStorm;
            }

            Text {
                row: 2; colspan: 2;
                text: "3H forecast";
                horizontal-alignment: center;
                font-weight: 500;
                font-size: Skin.MediumFont;
            }
            StormIcon {
                row: 3; col: 0;
                value: kp_forecast_3h;
                type: StormType.GeoStorm;
            }
            StormIcon {
                row: 3; col: 1;
                value: solar-radiation-forecast-3h;
                type: StormType.SolarRadiationStorm;
            }

            Text {
                row: 4; colspan: 2;
                text: "24H forecast";
                horizontal-alignment: center;
                font-weight: 500;
                font-size: Skin.MediumFont;
            }
            StormIcon {
                row: 5; col: 0;
                value: kp_forecast_24h;
                type: StormType.GeoStorm;
            }
            StormIcon {
                row: 5; col: 1;
                value: solar-radiation-forecast-24h;
                type: StormType.SolarRadiationStorm;
            }
        }
    }
}
